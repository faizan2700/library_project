name: CI/CD Pipeline 
run-name: Continuous Integration 

on: [push, pull_request]

jobs:
  postgresql-setup: 
    runs-on: ubuntu-latest 
    container: node:10.18-jessie 
    services: 
      postgres: 
        image: postgres 
        env: 
          POSTGRES_PASSWORD: postgres 
          options: >- 
            --health-cmd pg_isready 
            --health-interval 10s 
            --health-timeout 5s 
            --health-retries 5 
          ports: 
            - 5432: 5432 
    steps:  
      - name: Check out the repository code 
        uses: actions/checkout@v4 
      - name: Install dependencies 
        run: npm ci 
      - name: Connect to postgreSQL 
        run: node client.js 
        env: 
          POSTGRES_HOST: postgres 
          POSTGRES_PORT: 5432 
      - name: Create database 
        run: sudo psql -U postgres -h localhost -c "CREATE DATABASE library_db5;"

  build:
    runs-on: ubuntu-latest
    needs: postgresql-setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Replace '3.x' with your desired Python version

    - name: Create PostgreSQL Database 
      run: | 
        sudo -u postgres psql -c "CREATE DATABASE library_db5;"

    - name: Install dependencies
      run: | 
        sudo apt-get install libyaml-dev
        pip cache purge 
        python3 -m pip install virtualenv 
        python3 -m virtualenv venv 
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        source venv/bin/activate 
        pip install --upgrade setuptools 
        cd library 
        python manage.py test

    # Add more steps for building, deploying, etc. as needed