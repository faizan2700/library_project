name: CI/CD Pipeline 
run-name: Continuous Integration 

on: [push, pull_request]

jobs:
  postgresql-setup: 
    runs-on: ubuntu-latest 
    services: 
      postgres: 
        image: postgres 
        env: 
          POSTGRES_USER: postgres 
          POSTGRES_PASSWORD: postgres 
          POSTGRES_DB: postgres 
        ports: 
          - 5432:5432
        options: 
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5 
    steps: 
      - name: Install postgresql-client (psql)
        run: |
          sudo apt update -y
          sudo apt install -y postgresql-client
          sudo psql --version
      - name: Wait for postgresql to start 
        run: | 
          timeout 30 bash -c 'until nc -z localhost 5432; do sleep 1; done' 

      # - name: Create PostgreSQL Database 
      #   run: 
      #     psql "postgresql://postgres:postgres@localhost:5432" <<EOF
      #       CREATE DATABASE library_db5; 
      #     EOF
      #   env: 
      #     POSTGRES_PASSWORD: postgres 

  build:
    runs-on: ubuntu-latest
    needs: postgresql-setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Replace '3.x' with your desired Python version

    - name: Create PostgreSQL Database 
      run: | 
        sudo service postgresql start 
        sleep 10s 
        PGPASSWORD=postgres psql -h localhost -U postgres --password postgres -c "CREATE DATABASE library_db5;" 
      env: 
        

    - name: Install dependencies
      run: | 
        sudo apt-get install libyaml-dev
        pip cache purge 
        python3 -m pip install virtualenv 
        python3 -m virtualenv venv 
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        source venv/bin/activate 
        pip install --upgrade setuptools 
        cd library 
        python manage.py test

    # Add more steps for building, deploying, etc. as needed